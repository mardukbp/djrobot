# Generated by Django 4.2.3 on 2023-07-20 16:44

from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='KeywordCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(db_index=True, default=0)),
                ('return_value', models.CharField(blank=True, max_length=255)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.keyword')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RobotArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RobotExec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('server', models.CharField(choices=[('localhost', 'localhost')], default='localhost', max_length=255)),
                ('status', models.CharField(choices=[('Planned', 'Planned'), ('Running', 'Running'), ('Done', 'Done')], default='Planned', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SettingArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SettingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TestSuite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('doc', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(db_index=True, default=0)),
                ('name', models.CharField(max_length=255)),
                ('doc', models.TextField()),
                ('test_suite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.testsuite')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='SettingOptionalArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255)),
                ('test_suite_setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.settingargument')),
            ],
        ),
        migrations.AddField(
            model_name='settingargument',
            name='setting_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.settingtype'),
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('argument', smart_selects.db_fields.ChainedForeignKey(chained_field='setting_type', chained_model_field='setting_type', on_delete=django.db.models.deletion.CASCADE, to='robot.settingargument')),
                ('optional_argument', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='argument', chained_model_field='test_suite_setting', on_delete=django.db.models.deletion.CASCADE, to='robot.settingoptionalargument')),
                ('setting_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.settingtype')),
                ('test_suite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.testsuite')),
            ],
        ),
        migrations.CreateModel(
            name='RobotResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(choices=[('PASS', 'PASS'), ('FAIL', 'FAIL'), ('SKIP', 'SKIP')], max_length=255)),
                ('output_xml', models.BinaryField()),
                ('log_html', models.BinaryField()),
                ('robot_exec', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.robotexec')),
            ],
        ),
        migrations.CreateModel(
            name='RobotExecOptionalArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('argument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.robotargument')),
                ('robot_exec', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.robotexec')),
            ],
        ),
        migrations.AddField(
            model_name='robotexec',
            name='testsuite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.testsuite'),
        ),
        migrations.CreateModel(
            name='LibraryOptionalArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('default_value', models.CharField(max_length=255)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.library')),
            ],
        ),
        migrations.CreateModel(
            name='KeywordPositionalArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(default=0)),
                ('name', models.CharField(max_length=255)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.keyword')),
            ],
        ),
        migrations.CreateModel(
            name='KeywordOptionalArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('default_value', models.CharField(max_length=255)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.keyword')),
            ],
        ),
        migrations.CreateModel(
            name='KeywordCallPositionalArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(default=0)),
                ('value', models.CharField(max_length=255)),
                ('keyword_call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.keywordcall')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='KeywordCallOptionalArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('default_value', models.CharField(max_length=255)),
                ('keyword_call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.keywordcall')),
            ],
        ),
        migrations.AddField(
            model_name='keywordcall',
            name='test_case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.testcase'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='library',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.library'),
        ),
        migrations.AddConstraint(
            model_name='testcase',
            constraint=models.UniqueConstraint(fields=('test_suite', 'name'), name='testcase_primary_key'),
        ),
        migrations.AddConstraint(
            model_name='setting',
            constraint=models.UniqueConstraint(fields=('test_suite', 'setting_type', 'argument'), name='setting_primary_key'),
        ),
        migrations.AddConstraint(
            model_name='keywordcallpositionalargument',
            constraint=models.UniqueConstraint(fields=('keyword_call', 'index'), name='keyword_call_positional_argument_primary_key'),
        ),
        migrations.AddConstraint(
            model_name='keywordcalloptionalargument',
            constraint=models.UniqueConstraint(fields=('keyword_call', 'name'), name='keyword_call_optional_argument_primary_key'),
        ),
        migrations.AddConstraint(
            model_name='keywordcall',
            constraint=models.UniqueConstraint(fields=('test_case', 'index'), name='keyword_call_primary_key'),
        ),
    ]
